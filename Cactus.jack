class Cactus {

    field int x, y;
    field int width, height;

    constructor Cactus new() {
        let x = 480;
        let y = 180;
        let width = 20;
        let height = 40;
        return this;
    }

    method int getX() {
        return x;
    }

    method int getY() {
        return y;
    }

    method int getWidth() {
        return width;
    }

    method int getHeight() {
        return height;
    }

    method void dibujarCactus() {
        var int rightBorder;
        var int memAddress;
        let memAddress = 16384 + Utility.xyToScreenMap(x, y - 15);
        if ((memAddress > 16383) & (memAddress < 24576)) {
            do Screen.setColor(true);
            do Memory.poke(memAddress, 896);
            do Memory.poke(memAddress + 32, 1984);
            do Memory.poke(memAddress + 64, 1984);
            do Memory.poke(memAddress + 96, 1984);
            do Memory.poke(memAddress + 128, 1984);
            do Memory.poke(memAddress + 160, 1984);
            do Memory.poke(memAddress + 192, -14394);
            do Memory.poke(memAddress + 224, -6202);
            do Memory.poke(memAddress + 256, -6193);
            do Memory.poke(memAddress + 288, -6193);
            do Memory.poke(memAddress + 320, -6193);
            do Memory.poke(memAddress + 352, -6193);
            do Memory.poke(memAddress + 384, -6193);
            do Memory.poke(memAddress + 416, -49);
            do Memory.poke(memAddress + 448, -49);
            do Memory.poke(memAddress + 480, -49);
            do Memory.poke(memAddress + 512, -49);
            do Memory.poke(memAddress + 544, 1999);
            do Memory.poke(memAddress + 576, 1999);
            do Memory.poke(memAddress + 608, 1999);
            do Memory.poke(memAddress + 640, 2047);
            do Memory.poke(memAddress + 672, 2046);
            do Memory.poke(memAddress + 704, 2046);
            do Memory.poke(memAddress + 736, 2040);
            do Memory.poke(memAddress + 768, 1984);
            do Memory.poke(memAddress + 800, 1984);
            do Memory.poke(memAddress + 832, 1984);
            do Memory.poke(memAddress + 864, 1984);
            do Memory.poke(memAddress + 896, 1984);
            do Memory.poke(memAddress + 928, 1984);
            do Memory.poke(memAddress + 960, 1984);
            do Memory.poke(memAddress + 992, 1984);
            do Memory.poke(memAddress + 1024, 1984);
            do Memory.poke(memAddress + 1056, 1984);
            do Memory.poke(memAddress + 1088, 1984);

            // Column 1
            do Memory.poke(memAddress + 225, 1);
            do Memory.poke(memAddress + 257, 1);
            do Memory.poke(memAddress + 289, 1);
            do Memory.poke(memAddress + 321, 1);
            do Memory.poke(memAddress + 353, 1);
            do Memory.poke(memAddress + 385, 1);
            do Memory.poke(memAddress + 417, 1);
            do Memory.poke(memAddress + 449, 1);
            do Memory.poke(memAddress + 481, 1);
            do Memory.poke(memAddress + 513, 1);
            do Memory.poke(memAddress + 545, 1);
        }
        return;
    }


    method void borrarCactus() {
    var int memAddress;

    let memAddress = 16384 + Utility.xyToScreenMap(x, y - 15);

    if ((memAddress > 16383) & (memAddress < 24576)) {
        do Screen.setColor(false);
        do Screen.drawRectangle(x, y - 15, x + 10, y);

        // columna 0
        do Memory.poke(memAddress, 0);
        do Memory.poke(memAddress + 32, 0);
        do Memory.poke(memAddress + 64, 0);
        do Memory.poke(memAddress + 96, 0);
        do Memory.poke(memAddress + 128, 0);
        do Memory.poke(memAddress + 160, 0);
        do Memory.poke(memAddress + 192, 0);
        do Memory.poke(memAddress + 224, 0);
        do Memory.poke(memAddress + 256, 0);
        do Memory.poke(memAddress + 288, 0);
        do Memory.poke(memAddress + 320, 0);
        do Memory.poke(memAddress + 352, 0);
        do Memory.poke(memAddress + 384, 0);
        do Memory.poke(memAddress + 416, 0);
        do Memory.poke(memAddress + 448, 0);
        do Memory.poke(memAddress + 480, 0);
        do Memory.poke(memAddress + 512, 0);
        do Memory.poke(memAddress + 544, 0);
        do Memory.poke(memAddress + 576, 0);
        do Memory.poke(memAddress + 608, 0);
        do Memory.poke(memAddress + 640, 0);
        do Memory.poke(memAddress + 672, 0);
        do Memory.poke(memAddress + 704, 0);
        do Memory.poke(memAddress + 736, 0);
        do Memory.poke(memAddress + 768, 0);
        do Memory.poke(memAddress + 800, 0);
        do Memory.poke(memAddress + 832, 0);
        do Memory.poke(memAddress + 864, 0);
        do Memory.poke(memAddress + 896, 0);
        do Memory.poke(memAddress + 928, 0);
        do Memory.poke(memAddress + 960, 0);
        do Memory.poke(memAddress + 992, 0);
        do Memory.poke(memAddress + 1024, 0);
        do Memory.poke(memAddress + 1056, 0);
        do Memory.poke(memAddress + 1088, 0);

        // columna 1
        do Memory.poke(memAddress + 225, 0);
        do Memory.poke(memAddress + 257, 0);
        do Memory.poke(memAddress + 289, 0);
        do Memory.poke(memAddress + 321, 0);
        do Memory.poke(memAddress + 353, 0);
        do Memory.poke(memAddress + 385, 0);
        do Memory.poke(memAddress + 417, 0);
        do Memory.poke(memAddress + 449, 0);
        do Memory.poke(memAddress + 481, 0);
        do Memory.poke(memAddress + 513, 0);
        do Memory.poke(memAddress + 545, 0);
    }
    return;
    }   


    method void reiniciarCactus() {
        let x = 480;
        return;
    }

    method void moverCactus() {
        if (x > 25) {
            let x = x - 10;
        }
        return;
    }

}
